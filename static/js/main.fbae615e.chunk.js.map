{"version":3,"sources":["Component/InfoContainer.js","Component/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","InfoContainer","data","classes","className","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","centers","map","each","scope","name","sessions","min_age_limit","vaccine","available_capacity","Loader","App","useState","setData","dataAvailable","setDataAvailable","useEffect","navigator","geolocation","getCurrentPosition","position","fetch","coords","latitude","longitude","then","response","json","Locationdata","console","log","address","postcode","responsestate","StateList","states","state","state_name","state_id","responsedistrict","DistrictData","districts","district","district_name","city","district_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAUMA,EAAkBC,aAAW,SAACC,GAAD,MAAY,CAC3CC,KAAM,CACFC,gBAAiBF,EAAMG,QAAQC,OAAOC,MACtCC,MAAON,EAAMG,QAAQC,OAAOG,OAEhCC,KAAM,CACFC,SAAU,OANMV,CAQpBW,KAEEC,EAAiBZ,aAAW,SAACC,GAAD,MAAY,CAC1CY,KAAM,CACF,qBAAsB,CAClBV,gBAAiBF,EAAMG,QAAQU,OAAOC,WAH3Bf,CAMnBgB,KACEC,EAAYC,YAAW,CACzBC,MAAO,CACHC,SAAU,OAqCHC,MAjCf,YAAkC,IAATC,EAAQ,EAARA,KACfC,EAAUN,IAChB,OACI,qBAAKO,UAAU,gBAAf,SAEI,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACI,eAACC,EAAA,EAAD,CAAOJ,UAAWD,EAAQJ,MAAOU,aAAW,mBAA5C,UACI,cAACC,EAAA,EAAD,UACI,eAACd,EAAA,EAAD,WACI,cAACjB,EAAD,6BACA,cAACA,EAAD,CAAiBgC,MAAM,QAAvB,uBACA,cAAChC,EAAD,CAAiBgC,MAAM,QAAvB,yBACA,cAAChC,EAAD,CAAiBgC,MAAM,QAAvB,iCAGR,cAACC,EAAA,EAAD,UACKV,EAAKW,QAAQC,KAAI,SAACC,GAAD,OACd,eAACvB,EAAD,WACI,cAACb,EAAD,CAAiB2B,UAAU,KAAKU,MAAM,MAAtC,SACKD,EAAKE,OAEV,cAACtC,EAAD,CAAiBgC,MAAM,QAAvB,SAAgCI,EAAKG,SAAS,GAAGC,gBACjD,cAACxC,EAAD,CAAiBgC,MAAM,QAAvB,SAAgCI,EAAKG,SAAS,GAAGE,UACjD,cAACzC,EAAD,CAAiBgC,MAAM,QAAvB,SAAgCI,EAAKG,SAAS,GAAGG,uBANhCN,EAAKE,mBCxCvCK,MARf,WACI,OACI,qBAAKlB,UAAU,SAAf,qB,MCuEOmB,MAtEf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAA0CD,oBAAS,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KA6DA,OA5DAC,qBAAU,WAERC,UAAUC,YAAYC,oBAAmB,SAACC,GAKxCC,MAAM,yFAAD,OAA0FD,EAASE,OAAOC,SAA1G,gBAA0HH,EAASE,OAAOE,UAA1I,iBACFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAI,gBAAiBF,GAC7BC,QAAQC,IAAI,KAAMF,EAAaG,QAAQC,UACvCX,MAAM,0DACHI,MAAK,SAAAQ,GAAa,OAAIA,EAAcN,UACpCF,MAAK,SAAAS,GACJL,QAAQC,IAAII,GACZA,EAAUC,OAAOjC,KAAI,SAAAkC,GACfA,EAAMC,aAAeT,EAAaG,QAAQK,QAC5CP,QAAQC,IAAI,eAAgBM,EAAME,UAClCjB,MAAM,6DAAD,OAA8De,EAAME,WACtEb,MAAK,SAAAc,GAAgB,OAAIA,EAAiBZ,UAC1CF,MAAK,SAAAe,GACJX,QAAQC,IAAIU,GACZA,EAAaC,UAAUvC,KAAI,SAAAwC,GACrBA,EAASC,gBAAkBf,EAAaG,QAAQa,OAClDf,QAAQC,IAAI,kBAAmBY,EAASG,aACxCxB,MAAM,+FAAD,OAAgGqB,EAASG,YAAzG,qBACFpB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAnC,GACJuB,EAAQvB,GACRyB,GAAiB,GACjBc,QAAQC,IAAI,YAAaxC,0BAoBnDuC,QAAQC,IAAI,SAQX,IAED,qBAAKtC,UAAU,MAAf,SACIsB,EAA6B,cAAC,EAAD,CAAexB,KAAMA,IAAlC,cAAC,EAAD,OC1DTwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fbae615e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n\r\nfunction InfoContainer({ data }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"infoContainer\">\r\n            {/* {data.centers.map(each => (<h1>{each.center_id}</h1>))} */}\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Name of Center</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Age Limit</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Vacine Name</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Available Dose</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {data.centers.map((each) => (\r\n                            <StyledTableRow key={each.name}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {each.name}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{each.sessions[0].min_age_limit}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{each.sessions[0].vaccine}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{each.sessions[0].available_capacity}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoContainer\r\n","import React from 'react'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"loader\">\r\n            Loader\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import { useEffect, useState } from 'react';\nimport InfoContainer from './Component/InfoContainer';\nimport Loader from './Component/Loader';\nimport './style/style.css';\n\nfunction App() {\n  const [data, setData] = useState([])\n  const [dataAvailable, setDataAvailable] = useState(false)\n  useEffect(() => {\n\n    navigator.geolocation.getCurrentPosition((position) => {\n      // setLocation({\n      //   lat: position.coords.latitude,\n      //   lon: position.coords.longitude,\n      // });\n      fetch(`https://us1.locationiq.com/v1/reverse.php?key=pk.aeebe5b1021eaf94b37fbeddaef781f0&lat=${position.coords.latitude}&lon=${position.coords.longitude}&format=json`)\n        .then(response => response.json())\n        .then(Locationdata => {\n          console.log(\"location data\", Locationdata)\n          console.log(\"aa\", Locationdata.address.postcode)\n          fetch(`https://cdn-api.co-vin.in/api/v2/admin/location/states`)\n            .then(responsestate => responsestate.json())\n            .then(StateList => {\n              console.log(StateList)\n              StateList.states.map(state => {\n                if (state.state_name === Locationdata.address.state) {\n                  console.log(\"state_id is \", state.state_id)\n                  fetch(`https://cdn-api.co-vin.in/api/v2/admin/location/districts/${state.state_id}`)\n                    .then(responsedistrict => responsedistrict.json())\n                    .then(DistrictData => {\n                      console.log(DistrictData)\n                      DistrictData.districts.map(district => {\n                        if (district.district_name === Locationdata.address.city) {\n                          console.log(\"district_id is \", district.district_id)\n                          fetch(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=${district.district_id}&date=04-05-2021`)\n                            .then(response => response.json())\n                            .then(data => {\n                              setData(data)\n                              setDataAvailable(true)\n                              console.log(\"Main data\", data)\n                            })\n                        }\n                      })\n\n                    })\n                }\n              })\n            })\n\n          // fetch(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=${data.address.postcode}&date=04-05-2021`)\n          //   .then(response => response.json())\n          //   .then(data => {\n          //     setData(data)\n          //     setDataAvailable(true)\n          //     console.log(data)\n          //   })\n        })\n\n    })\n    console.log(\"app\")\n    // fetch('https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=461331&date=04-05-2021')\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     setData(data)\n    //     setDataAvailable(true)\n    //     console.log(data)\n    //   })\n  }, [])\n  return (\n    <div className=\"app\">\n      {!dataAvailable ? <Loader /> : <InfoContainer data={data} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}